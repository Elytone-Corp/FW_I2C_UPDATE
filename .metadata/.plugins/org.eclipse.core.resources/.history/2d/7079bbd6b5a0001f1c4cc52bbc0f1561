

/*Script - flash_manager.c*/
// by:-  Ashutosh tiwari


#include "flash_manager.h"
#include "mxc_device.h"
#include "mxc_delay.h"
#include "flc.h"
#include <string.h>
#include <stdio.h>  // For error logging
#include <stdbool.h>

#define MAX_RETRY_COUNT 3


#define PAGE_START_ADDR(addr)  ((addr) & ~(FLASH_PAGE_SIZE - 1))

// Error logging function
static void Flash_LogError(const char* message, int error_code) {
    printf("Flash Error: %s (Code: %d)\n", message, error_code);
}

// Initialize Flash Controller
void Flash_Init(void) {
    int ret = MXC_FLC_Init();
    if (ret != E_NO_ERROR) {
        Flash_LogError("Failed to initialize Flash Controller", ret);
        // Retry mechanism
        for (int attempt = 1; attempt <= MAX_RETRY_COUNT; attempt++) {
            ret = MXC_FLC_Init();
            if (ret == E_NO_ERROR) {
                printf("Flash Controller initialized on retry %d\n", attempt);
                return;
            }
            Flash_LogError("Retrying Flash Controller initialization", ret);
            MXC_Delay(MXC_DELAY_MSEC(50));  // Short delay between retries
        }
        // Critical failure if retries fail
        printf("Critical: Flash Controller initialization failed after %d attempts\n", MAX_RETRY_COUNT);
    }
}

flash_status_t Flash_ErasePage(uint32_t address){
	if (!Flash_IsAddressValid(address)) {
		Flash_logError("Invalid address for page erase", FLASH_ERROR_INVALID_ADDRESS);
		return FLASH_ERROR_INVALID_ADDRESS;
	}

	int ret = MXC_FLC_PageErase(PAGE_START_ADDR(address));
	if (ret!= E_NO_ERROR) {
		Flash_LogError("Failed to erase page", ret);
		return FLASH_ERROR_ERASE;
	}

	return FLASH_SUCCESS;

}

// program page with provided data

flash_status_t Flash_ProgramPage(uint32_t address, const uint8_t *data, uint32_t length) {
	if (!Flash_IsAddressValid(address) || (length > FLASH_PAGE_SIZE)) {
		Flash_logError("Invalid address or data length for programming", FLASH_ERROR_INVALID_ADDRESS);
		return FLASH_ERROR_INVALID_ADDRESS;
	}

	flash_status_t erase_status = Flash_ErasePage(address++);
	if (erase_status != FLASH_SUCCESS) {
		return erase_status;
	}

	for (int attempt = 1 ; attempt <= MAX_RETRY_COUNT; attempt++) {
		int ret = MXC_FLC_Write(address, data, length);
		if (ret == E_NO_ERROR && Flash_VerifyPage(address, data, length)) {
			return FLASH_SUCCESS;
		}

		Flash_LogError("Flash programming failed, retrying", ret);
		MXC_Delay(MXC_DELAY_MSEC(50));

	}

	Flash_LogError("Critical: Flash programming failed after multiple attemps", FLASH_ERROR_WRITE);
	return FLASH_ERROR_WRITE;
}


bool Flash_VerifyPage(uint32_t )













